import{d as createComponent,r as renderTemplate,m as maybeRenderHead,u as unescapeHTML}from"./astro-CBVvFz9n.js";const html='<h2 id="js-object常用功能">JS Object常用功能<a class="anchor" href="#js-object常用功能"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h2>\n<p>在JavaScript中，物件是一個非常重要且常用的資料型別。它允許我們以鍵值對的形式組織和存儲資料。以下是一些常用的JS物件功能：</p>\n<h3 id="1-物件建立">1. 物件建立<a class="anchor" href="#1-物件建立"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<p>可以使用物件字面量或者使用<code>new</code>關鍵字來建立一個物件。</p>\n<pre class="astro-code github-dark" style="background-color:#24292e;color:#e1e4e8; overflow-x: auto;" tabindex="0"><code><span class="line"><span style="color:#6A737D">// 使用物件字面量建立物件</span></span>\n<span class="line"><span style="color:#F97583">const</span><span style="color:#79B8FF"> person</span><span style="color:#F97583"> =</span><span style="color:#E1E4E8"> {</span></span>\n<span class="line"><span style="color:#E1E4E8">  name: </span><span style="color:#9ECBFF">\'John\'</span><span style="color:#E1E4E8">,</span></span>\n<span class="line"><span style="color:#E1E4E8">  age: </span><span style="color:#79B8FF">30</span><span style="color:#E1E4E8">,</span></span>\n<span class="line"><span style="color:#E1E4E8">  city: </span><span style="color:#9ECBFF">\'New York\'</span></span>\n<span class="line"><span style="color:#E1E4E8">};</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#6A737D">// 使用new關鍵字建立物件</span></span>\n<span class="line"><span style="color:#F97583">const</span><span style="color:#79B8FF"> car</span><span style="color:#F97583"> =</span><span style="color:#F97583"> new</span><span style="color:#B392F0"> Object</span><span style="color:#E1E4E8">();</span></span>\n<span class="line"><span style="color:#E1E4E8">car.brand </span><span style="color:#F97583">=</span><span style="color:#9ECBFF"> \'Toyota\'</span><span style="color:#E1E4E8">;</span></span>\n<span class="line"><span style="color:#E1E4E8">car.model </span><span style="color:#F97583">=</span><span style="color:#9ECBFF"> \'Camry\'</span><span style="color:#E1E4E8">;</span></span>\n<span class="line"><span style="color:#E1E4E8">car.year </span><span style="color:#F97583">=</span><span style="color:#79B8FF"> 2022</span><span style="color:#E1E4E8">;</span></span></code></pre>\n<h3 id="2-存取物件屬性">2. 存取物件屬性<a class="anchor" href="#2-存取物件屬性"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<p>可以使用點號<code>.</code>或者方括號<code>[]</code>來存取物件的屬性。</p>\n<pre class="astro-code github-dark" style="background-color:#24292e;color:#e1e4e8; overflow-x: auto;" tabindex="0"><code><span class="line"><span style="color:#E1E4E8">console.</span><span style="color:#B392F0">log</span><span style="color:#E1E4E8">(person.name); </span><span style="color:#6A737D">// 輸出: John</span></span>\n<span class="line"><span style="color:#E1E4E8">console.</span><span style="color:#B392F0">log</span><span style="color:#E1E4E8">(car[</span><span style="color:#9ECBFF">\'brand\'</span><span style="color:#E1E4E8">]); </span><span style="color:#6A737D">// 輸出: Toyota</span></span></code></pre>\n<h3 id="3-修改物件屬性">3. 修改物件屬性<a class="anchor" href="#3-修改物件屬性"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<p>可以直接對物件的屬性進行賦值來修改它們的值。</p>\n<pre class="astro-code github-dark" style="background-color:#24292e;color:#e1e4e8; overflow-x: auto;" tabindex="0"><code><span class="line"><span style="color:#E1E4E8">person.age </span><span style="color:#F97583">=</span><span style="color:#79B8FF"> 35</span><span style="color:#E1E4E8">;</span></span>\n<span class="line"><span style="color:#E1E4E8">car[</span><span style="color:#9ECBFF">\'year\'</span><span style="color:#E1E4E8">] </span><span style="color:#F97583">=</span><span style="color:#79B8FF"> 2023</span><span style="color:#E1E4E8">;</span></span></code></pre>\n<h3 id="4-刪除物件屬性">4. 刪除物件屬性<a class="anchor" href="#4-刪除物件屬性"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<p>可以使用<code>delete</code>關鍵字來刪除物件的屬性。</p>\n<pre class="astro-code github-dark" style="background-color:#24292e;color:#e1e4e8; overflow-x: auto;" tabindex="0"><code><span class="line"><span style="color:#F97583">delete</span><span style="color:#E1E4E8"> person.city;</span></span>\n<span class="line"><span style="color:#F97583">delete</span><span style="color:#E1E4E8"> car.model;</span></span></code></pre>\n<h3 id="5-物件迭代">5. 物件迭代<a class="anchor" href="#5-物件迭代"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<p>可以使用<code>for...in</code>迴圈來迭代物件的屬性。</p>\n<pre class="astro-code github-dark" style="background-color:#24292e;color:#e1e4e8; overflow-x: auto;" tabindex="0"><code><span class="line"><span style="color:#F97583">for</span><span style="color:#E1E4E8"> (</span><span style="color:#F97583">let</span><span style="color:#E1E4E8"> key </span><span style="color:#F97583">in</span><span style="color:#E1E4E8"> person) {</span></span>\n<span class="line"><span style="color:#E1E4E8">  console.</span><span style="color:#B392F0">log</span><span style="color:#E1E4E8">(key </span><span style="color:#F97583">+</span><span style="color:#9ECBFF"> \': \'</span><span style="color:#F97583"> +</span><span style="color:#E1E4E8"> person[key]);</span></span>\n<span class="line"><span style="color:#E1E4E8">}</span></span></code></pre>\n<h3 id="6-物件方法">6. 物件方法<a class="anchor" href="#6-物件方法"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h3>\n<p>物件可以包含方法，這些方法可以在物件上執行特定的操作。</p>\n<pre class="astro-code github-dark" style="background-color:#24292e;color:#e1e4e8; overflow-x: auto;" tabindex="0"><code><span class="line"><span style="color:#F97583">const</span><span style="color:#79B8FF"> calculator</span><span style="color:#F97583"> =</span><span style="color:#E1E4E8"> {</span></span>\n<span class="line"><span style="color:#B392F0">  add</span><span style="color:#E1E4E8">: </span><span style="color:#F97583">function</span><span style="color:#E1E4E8">(</span><span style="color:#FFAB70">a</span><span style="color:#E1E4E8">, </span><span style="color:#FFAB70">b</span><span style="color:#E1E4E8">) {</span></span>\n<span class="line"><span style="color:#F97583">    return</span><span style="color:#E1E4E8"> a </span><span style="color:#F97583">+</span><span style="color:#E1E4E8"> b;</span></span>\n<span class="line"><span style="color:#E1E4E8">  },</span></span>\n<span class="line"><span style="color:#B392F0">  subtract</span><span style="color:#E1E4E8">: </span><span style="color:#F97583">function</span><span style="color:#E1E4E8">(</span><span style="color:#FFAB70">a</span><span style="color:#E1E4E8">, </span><span style="color:#FFAB70">b</span><span style="color:#E1E4E8">) {</span></span>\n<span class="line"><span style="color:#F97583">    return</span><span style="color:#E1E4E8"> a </span><span style="color:#F97583">-</span><span style="color:#E1E4E8"> b;</span></span>\n<span class="line"><span style="color:#E1E4E8">  }</span></span>\n<span class="line"><span style="color:#E1E4E8">};</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8">console.</span><span style="color:#B392F0">log</span><span style="color:#E1E4E8">(calculator.</span><span style="color:#B392F0">add</span><span style="color:#E1E4E8">(</span><span style="color:#79B8FF">5</span><span style="color:#E1E4E8">, </span><span style="color:#79B8FF">3</span><span style="color:#E1E4E8">)); </span><span style="color:#6A737D">// 輸出: 8</span></span>\n<span class="line"><span style="color:#E1E4E8">console.</span><span style="color:#B392F0">log</span><span style="color:#E1E4E8">(calculator.</span><span style="color:#B392F0">subtract</span><span style="color:#E1E4E8">(</span><span style="color:#79B8FF">5</span><span style="color:#E1E4E8">, </span><span style="color:#79B8FF">3</span><span style="color:#E1E4E8">)); </span><span style="color:#6A737D">// 輸出: 2</span></span></code></pre>\n<p>以上是一些JS物件的常用功能，希望對你有所幫助！</p>',frontmatter={title:"JS 物件",published:"2024-06-12T00:00:00.000Z",description:"這是關於物件常見功能的文章",image:"",tags:["Object","JS"],category:"Object",draft:!1,minutes:2,words:346},file="/home/runner/work/astroblog/astroblog/src/content/posts/jspost/js-object.md",url=void 0;function rawContent(){return"\n\n## JS Object常用功能\n\n在JavaScript中，物件是一個非常重要且常用的資料型別。它允許我們以鍵值對的形式組織和存儲資料。以下是一些常用的JS物件功能：\n\n### 1. 物件建立\n\n可以使用物件字面量或者使用`new`關鍵字來建立一個物件。\n\n```javascript\n// 使用物件字面量建立物件\nconst person = {\n  name: 'John',\n  age: 30,\n  city: 'New York'\n};\n\n// 使用new關鍵字建立物件\nconst car = new Object();\ncar.brand = 'Toyota';\ncar.model = 'Camry';\ncar.year = 2022;\n```\n\n### 2. 存取物件屬性\n\n可以使用點號`.`或者方括號`[]`來存取物件的屬性。\n\n```javascript\nconsole.log(person.name); // 輸出: John\nconsole.log(car['brand']); // 輸出: Toyota\n```\n\n### 3. 修改物件屬性\n\n可以直接對物件的屬性進行賦值來修改它們的值。\n\n```javascript\nperson.age = 35;\ncar['year'] = 2023;\n```\n\n### 4. 刪除物件屬性\n\n可以使用`delete`關鍵字來刪除物件的屬性。\n\n```javascript\ndelete person.city;\ndelete car.model;\n```\n\n### 5. 物件迭代\n\n可以使用`for...in`迴圈來迭代物件的屬性。\n\n```javascript\nfor (let key in person) {\n  console.log(key + ': ' + person[key]);\n}\n```\n\n### 6. 物件方法\n\n物件可以包含方法，這些方法可以在物件上執行特定的操作。\n\n```javascript\nconst calculator = {\n  add: function(a, b) {\n    return a + b;\n  },\n  subtract: function(a, b) {\n    return a - b;\n  }\n};\n\nconsole.log(calculator.add(5, 3)); // 輸出: 8\nconsole.log(calculator.subtract(5, 3)); // 輸出: 2\n```\n\n以上是一些JS物件的常用功能，希望對你有所幫助！\n"}function compiledContent(){return html}function getHeadings(){return[{depth:2,slug:"js-object常用功能",text:"JS Object常用功能#"},{depth:3,slug:"1-物件建立",text:"1. 物件建立#"},{depth:3,slug:"2-存取物件屬性",text:"2. 存取物件屬性#"},{depth:3,slug:"3-修改物件屬性",text:"3. 修改物件屬性#"},{depth:3,slug:"4-刪除物件屬性",text:"4. 刪除物件屬性#"},{depth:3,slug:"5-物件迭代",text:"5. 物件迭代#"},{depth:3,slug:"6-物件方法",text:"6. 物件方法#"}]}const Content=createComponent(((n,s,a)=>{const{layout:o,...l}=frontmatter;return l.file=file,l.url=url,renderTemplate`${maybeRenderHead()}${unescapeHTML(html)}`}));export{Content,compiledContent,Content as default,file,frontmatter,getHeadings,rawContent,url};