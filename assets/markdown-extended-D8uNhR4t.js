import{d as createComponent,r as renderTemplate,m as maybeRenderHead,u as unescapeHTML}from"./astro-CBVvFz9n.js";const html='<h2 id="github-repository-cards">GitHub repository cards!<a class="anchor" href="#github-repository-cards"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h2>\n<p>You can add dynamic cards that link to GitHub repositories, on page load, the repository information is pulled from the GitHub API.</p>\n<a id="GCor5r9u-card" class="card-github fetch-waiting no-styling" href="https://github.com/Fabrizz/MMM-OnSpotify" target="_blank" repo="Fabrizz/MMM-OnSpotify"><div class="gc-titlebar"><div class="gc-titlebar-left"><div class="gc-owner"><div id="GCor5r9u-avatar" class="gc-avatar"></div><div class="gc-user">Fabrizz</div></div><div class="gc-divider">/</div><div class="gc-repo">MMM-OnSpotify</div></div><div class="github-logo"></div></div><div id="GCor5r9u-description" class="gc-description">Waiting for api.github.com...</div><div class="gc-infobar"><div id="GCor5r9u-stars" class="gc-stars">00K</div><div id="GCor5r9u-forks" class="gc-forks">0K</div><div id="GCor5r9u-license" class="gc-license">0K</div><span id="GCor5r9u-language" class="gc-language">Waiting...</span></div><script id="GCor5r9u-script" type="text/javascript" defer>\n      fetch(\'https://api.github.com/repos/Fabrizz/MMM-OnSpotify\', { referrerPolicy: "no-referrer" }).then(response => response.json()).then(data => {\n        document.getElementById(\'GCor5r9u-card\').href = data.html_url;\n        document.getElementById(\'GCor5r9u-description\').innerText = data.description.replace(/:[a-zA-Z0-9_]+:/g, \'\');\n        document.getElementById(\'GCor5r9u-language\').innerText = data.language;\n        document.getElementById(\'GCor5r9u-forks\').innerText = Intl.NumberFormat(\'en-us\', { notation: "compact", maximumFractionDigits: 1 }).format(data.forks).replaceAll(" ", \'\');\n        document.getElementById(\'GCor5r9u-stars\').innerText = Intl.NumberFormat(\'en-us\', { notation: "compact", maximumFractionDigits: 1 }).format(data.stargazers_count).replaceAll(" ", \'\');\n        const avatarEl = document.getElementById(\'GCor5r9u-avatar\');\n        avatarEl.style.backgroundImage = \'url(\' + data.owner.avatar_url + \')\';\n        avatarEl.style.backgroundColor = \'transparent\';\n        if (data.license?.spdx_id) {\n          document.getElementById(\'GCor5r9u-license\').innerText = data.license?.spdx_id\n        } else {\n          document.getElementById(\'GCor5r9u-license\').classList.add = "no-license"\n        };\n          document.getElementById(\'GCor5r9u-card\').classList.remove("fetch-waiting");\n          console.log("[GITHUB-CARD] Loaded card for Fabrizz/MMM-OnSpotify | GCor5r9u.")\n      }).catch(err => {\n        const c = document.getElementById(\'GCor5r9u-card\');\n        c.classList.add("fetch-error");\n         console.warn("[GITHUB-CARD] (Error) Loading card for Fabrizz/MMM-OnSpotify | GCor5r9u.")\n      })\n    <\/script></a>\n<p>Create a GitHub repository card with the code <code>::github{repo="&#x3C;owner>/&#x3C;repo>"}</code>.</p>\n<pre class="astro-code github-dark" style="background-color:#24292e;color:#e1e4e8; overflow-x: auto;" tabindex="0"><code><span class="line"><span style="color:#E1E4E8">::github{repo="saicaca/fuwari"}</span></span></code></pre>\n<h2 id="admonitions">Admonitions<a class="anchor" href="#admonitions"><span class="anchor-icon" data-pagefind-ignore="">#</span></a></h2>\n<p>Following types of admonitions are supported: <code>note</code> <code>tip</code> <code>important</code> <code>warning</code> <code>caution</code></p>\n<blockquote class="admonition bdm-note"><span class="bdm-title">NOTE</span><p>Highlights information that users should take into account, even when skimming.</p></blockquote>\n<blockquote class="admonition bdm-tip"><span class="bdm-title">TIP</span><p>Optional information to help a user be more successful.</p></blockquote>\n<blockquote class="admonition bdm-important"><span class="bdm-title">IMPORTANT</span><p>Crucial information necessary for users to succeed.</p></blockquote>\n<blockquote class="admonition bdm-warning"><span class="bdm-title">WARNING</span><p>Critical content demanding immediate user attention due to potential risks.</p></blockquote>\n<blockquote class="admonition bdm-caution"><span class="bdm-title">CAUTION</span><p>Negative potential consequences of an action.</p></blockquote>\n<pre class="astro-code github-dark" style="background-color:#24292e;color:#e1e4e8; overflow-x: auto;" tabindex="0"><code><span class="line"><span style="color:#E1E4E8">:::note</span></span>\n<span class="line"><span style="color:#E1E4E8">Highlights information that users should take into account, even when skimming.</span></span>\n<span class="line"><span style="color:#E1E4E8">:::</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#E1E4E8">:::tip</span></span>\n<span class="line"><span style="color:#E1E4E8">Optional information to help a user be more successful.</span></span>\n<span class="line"><span style="color:#E1E4E8">:::</span></span></code></pre>\n<p>The title of the admonition can be customized.</p>\n<blockquote class="admonition bdm-note"><span class="bdm-title"><div>MY CUSTOM TITLE</div></span><p>This is a note with a custom title.</p></blockquote>\n<pre class="astro-code github-dark" style="background-color:#24292e;color:#e1e4e8; overflow-x: auto;" tabindex="0"><code><span class="line"><span style="color:#E1E4E8">:::note[MY CUSTOM TITLE]</span></span>\n<span class="line"><span style="color:#E1E4E8">This is a note with a custom title.</span></span>\n<span class="line"><span style="color:#E1E4E8">:::</span></span></code></pre>',frontmatter={title:"Markdown Extended Features1",published:"2024-05-01T00:00:00.000Z",description:"Read more about Markdown features in Fuwari",image:"",tags:["Demo","Example","Markdown","Fuwari"],category:"Examples",draft:!1,minutes:1,words:130},file="/home/runner/work/astroblog/astroblog/src/content/posts/markdown-extended.md",url=void 0;function rawContent(){return'\n## GitHub repository cards!\nYou can add dynamic cards that link to GitHub repositories, on page load, the repository information is pulled from the GitHub API. \n\n::github{repo="Fabrizz/MMM-OnSpotify"}\n\nCreate a GitHub repository card with the code `::github{repo="<owner>/<repo>"}`.\n\n```markdown\n::github{repo="saicaca/fuwari"}\n```\n\n## Admonitions\n\nFollowing types of admonitions are supported: `note` `tip` `important` `warning` `caution`\n\n:::note\nHighlights information that users should take into account, even when skimming.\n:::\n\n:::tip\nOptional information to help a user be more successful.\n:::\n\n:::important\nCrucial information necessary for users to succeed.\n:::\n\n:::warning\nCritical content demanding immediate user attention due to potential risks.\n:::\n\n:::caution\nNegative potential consequences of an action.\n:::\n\n```markdown\n:::note\nHighlights information that users should take into account, even when skimming.\n:::\n\n:::tip\nOptional information to help a user be more successful.\n:::\n```\n\nThe title of the admonition can be customized.\n\n:::note[MY CUSTOM TITLE]\nThis is a note with a custom title.\n:::\n\n```markdown\n:::note[MY CUSTOM TITLE]\nThis is a note with a custom title.\n:::\n```'}function compiledContent(){return html}function getHeadings(){return[{depth:2,slug:"github-repository-cards",text:"GitHub repository cards!#"},{depth:2,slug:"admonitions",text:"Admonitions#"}]}const Content=createComponent(((n,e,t)=>{const{layout:o,...a}=frontmatter;return a.file=file,a.url=url,renderTemplate`${maybeRenderHead()}${unescapeHTML(html)}`}));export{Content,compiledContent,Content as default,file,frontmatter,getHeadings,rawContent,url};